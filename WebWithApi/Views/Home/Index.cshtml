@section headScripts {
<script src="~/AppScripts/TimeKeeping/userEntryProjects-dataSource.js"></script>
<script src="~/AppScripts/TimeKeeping/userEntries-model.js"></script>
<script src="~/AppScripts/TimeKeeping/userEntries-dataSource.js"></script>
<script src="~/AppScripts/TimeKeeping/userEntries-viewModel.js"></script>
<script src="~/AppScripts/TimeKeeping/userEntriesScheduler-model.js"></script>
<script src="~/AppScripts/TimeKeeping/userEntriesScheduler-dataSource.js"></script>
<style>
    .k-edit-form-container {
        padding-left: 12px;
    }

    .k-edit-form-container .k-dropdown {
        width: 450px;
    }

    #newEntryForm {
        background-color: #f5f5f5;
        border-style: solid;
        border-color: rgb(221, 221, 221);
        border-radius: 3px;
        border-width: 1px;
        padding: 5px 0 0 10px;
        margin-top: 1em;
        margin-bottom: 1em;
    }

    #newEntryForm .k-dropdown {
        width: 325px;
    }

    #newEntryForm li {
        list-style: none;
        display: inline;
        padding-right: 1em;
    }

    #newEntryForm ul {
        padding-left: 0;
    }
</style>
}

@if (ViewBag.IsTimeAdmin) {
    @Html.ActionLink("Admin", "Admin", null, new { @class = "btn btn-default btn-sm btn-primary" })
}

<p>@User.Identity.Name</p>

<div id="newEntryForm">
    <ul>
        <li>
            <label for="title">Project:</label>
            <input id="title" data-text-field="text" data-value-field="value" data-role="dropdownlist" data-bind="value: projectId" data-source="userEntryProjectsDataSource.data().toJSON()" />
        </li>

        <li>
            <label for="start">Date:</label>
            <input id="start" data-role="datetimepicker" data-bind="value: start">
        </li>

        <li>
            <label for="hours">Hours:</label>
            <input id="hours" data-role="numerictextbox" min="0.25" max="24.0" step="0.25" data-bind="value: hours">
        </li>

        <li>
            <input type="submit" value="Add" data-bind="click: add">
        </li>
    </ul>
</div>

<div id="userEntriesView">
    <div class="panel panel-default">
        <div class="panel-heading" data-bind="html: title"></div>
        <div class="panel-body">
            <div id="timesheet"></div>
        </div>
    </div>
</div>

<script id="editor" type="text/x-kendo-template">
    <p>
        <label>Project: <input data-text-field="text" data-value-field="value" data-role="dropdownlist" name="projectId" data-source="userEntryProjectsDataSource.data().toJSON()" /></label>
    </p>
    <p>
        <label>Hours: <input id="hoursEntry" class="k-textbox" data-bind="value: hours, events: { change: setEnd }" type="number" min="0.25" max="24.0" step="0.25" ></label>
    </p>
    <p>
        <label>Start: <input data-role="datetimepicker" name="start" data-interval="15" /></label>
    </p>
    <p>
        <label>End: <input data-role="datetimepicker" name="end" data-interval="15" /></label>
    </p>
</script>

<script id="entry-template" type="text/x-kendo-template">
    <div>
        <strong>#: title #</strong>
        <span>(#: kendo.toString(ms2Time(end - start)) #)</span>
    </div>
</script>

<script>
    var newEntryVM = kendo.observable({
        "id": 0,
        "projectId": 0,
        "title": "",
        "start": new Date(),
        "hours": 0.25,
        "setStart": function (e) {
            newEntryVM.set("start", e.date);
        },
        "add": function () {
            debugger;
            var projects = userEntryProjectsDataSource.data().toJSON();
            this.set("title", getTitle(this.get("projectId"), projects));
            var end = new Date();
            end.setTime(this.get("start").getTime() + this.get("hours") * 60 * 60 * 1000);
            this.set("id", this.get("id") + 1);
            var event = {
                "id": this.get("id"),
                "projectId": this.get("projectId"),
                "title": this.get("title"),
                "start": this.get("start"),
                "end": end
            }
            this.set("title", "");
            this.set("start", "");
            this.set("hours", 0.25);
            userEntriesSchedulerDataSource.add(event);
        }
    });
    kendo.bind($("#newEntryForm"), newEntryVM);

    kendo.bind($("#userEntriesView"), userEntriesViewModel);

    function setEnd(e) {
        debugger;
    }

    function editStarted(e) {
        //debugger;
        //$(".k-edit-form-container").width(750);
        var hours = hoursFromRange(e.event.start, e.event.end);
        e.event.set("hours", hours);
        //$("#hoursEntry").val(e.event.hours);
        debugger;
    }

    function ms2Time(ms) {
        var secs = ms / 1000;
        ms = Math.floor(ms % 1000);
        var minutes = secs / 60;
        secs = Math.floor(secs % 60);
        var hours = minutes / 60;
        minutes = Math.floor(minutes % 60);
        hours = Math.floor(hours % 24);
        return hours + ":" + kendo.toString(minutes, "00");
    }

    //function totalHoursForDate(date) {
    //    if (timesheet) {
    //        var from = new Date(date);
    //        var to = new Date(from);
    //        to.setDate(to.getDate() + 1);
    //        var entries = timesheet.occurrencesInRange(from, to);
    //        //return entries.length;
    //        var hours = 0;
    //        debugger;
    //        for (var i = 0; i < entries.length; i++) {
    //            var entry = entries[i];
    //            debugger;
    //        }
    //        return hours;
    //    } else {
    //        return "---";
    //    }
    //}

    var scheduler = $("#timesheet").kendoScheduler({
        editable: {
            window: {
                title: "Time Log Entry"
            },
            template: $("#editor").html()
        },
        allDaySlot: false,
        edit: editStarted,
        minorTickCount: 4,
        showWorkHours: true,
        workDayStart: new Date("2015/12/28 06:00 AM"),
        workDayEnd: new Date("2015/12/28 06:00 PM"),
        height: 600,
        eventTemplate: $("#entry-template").html(),
        //dateHeaderTemplate: kendo.template("#=kendo.toString(date, 'ddd M/dd')#- (#=totalHoursForDate(date)#)"),
        views: [
            "day",
            { type: "workWeek", selected: true },
            "week",
            "month",
            { type: "timeline", eventHeight: 50 }
        ],
        dataSource: userEntriesSchedulerDataSource,
        save: function (e) {
            var projects = userEntryProjectsDataSource.data().toJSON();
            e.event.title = getTitle(e.event.projectId, projects);
        }
    });
</script>